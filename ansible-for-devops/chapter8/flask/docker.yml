---
# - name: Build Docker images from Dockerfiles.
#   docker_image:
#     name: "{{ item.name }}"
#     tag: "{{ item.tag }}"
#     source: build
#     build:
#       path: "{{ build_root }}/{{ item.directory }}"
#       pull: false
#     state: present
#   with_items:
#     - { name: data, tag: latest, directory: data }
#     - { name: flask, tag: latest, directory: www }
#     - { name: db, tag: latest, directory: db }

- name: create build directory
  file:
    path: "/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - data
    - www
    - db

- name: copy Dockerfile
  copy:
    src: "./{{ item }}"
    dest: "/{{ app_dictinary }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - data
    - www
    - db

- name: build container image
  docker_image:
    name: "{{ item.name }}"
    tag: "{{ item.tag  }}"
    build:
      path: "/{{ app_dictinary }}/{{ item.directory }}"
    source: build
    state: present
  with_items:
    - { name: data, tag: latest, directory: data }
    - { name: www, tag: latest, directory: www }
    - { name: db, tag: latest, directory: db }

- name: Run a Data container.
  docker_container:
    image: data:latest
    name: data
    state: present

- name: Run a Flask container.
  docker_container:
    image: www:latest
    pull: false
    name: www
    state: started
    command: python3 /opt/www/index.py
    ports: "80:80"

- name: Run a MySQL container.
  docker_container:
    image: db:latest
    name: db
    state: started
    volumes_from: data
    ports: "3306:3306"
    env:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: flask
      MYSQL_USER: flask
      MYSQL_PASSWORD: flask
